{

	"scope": "source.js",

	"completions": [{
		"trigger": "app.set\t express 3.x",
		"contents": "app.set(${1:name},${2: value})"
	}, {
		"trigger": "app.get\t express 3.x",
		"contents": "app.get(${1:name})"
	}, {
		"trigger": "app.enable\t express 3.x",
		"contents": "app.enable(${1:name})"
	}, {
		"trigger": "app.disable\t express 3.x",
		"contents": "app.disable(${1:name})"
	}, {
		"trigger": "app.enabled\t express 3.x",
		"contents": "app.enabled(${1:name})"
	}, {
		"trigger": "app.disabled\t express 3.x",
		"contents": "app.disabled(${1:name})"
	}, {
		"trigger": "app.configure\t express 3.x",
		"contents": "app.configure(${1:[env]},${2: callback})"
	}, {
		"trigger": "app.use\t express 3.x",
		"contents": "app.use(${1:[path]},${2: function})"
	}, {
		"trigger": "settings\t express 3.x",
		"contents": "settings"
	}, {
		"trigger": "app.engine\t express 3.x",
		"contents": "app.engine(${1:ext},${2: callback})"
	}, {
		"trigger": "app.param\t express 3.x",
		"contents": "app.param(${1:[name]},${2: callback})"
	}, {
		"trigger": "app.VERB\t express 3.x",
		"contents": "app.VERB(${1:path},${2: [callback...]},${3: callback})"
	}, {
		"trigger": "app.all\t express 3.x",
		"contents": "app.all(${1:path},${2: [callback...]},${3: callback})"
	}, {
		"trigger": "app.locals\t express 3.x",
		"contents": "app.locals"
	}, {
		"trigger": "app.render\t express 3.x",
		"contents": "app.render(${1:view},${2: [options]},${3: callback})"
	}, {
		"trigger": "app.routes\t express 3.x",
		"contents": "app.routes"
	}, {
		"trigger": "app.listen\t express 3.x",
		"contents": "app.listen(${1:})"
	}, {
		"trigger": "req.params\t express 3.x",
		"contents": "req.params"
	}, {
		"trigger": "req.query\t express 3.x",
		"contents": "req.query"
	}, {
		"trigger": "req.body\t express 3.x",
		"contents": "req.body"
	}, {
		"trigger": "req.files\t express 3.x",
		"contents": "req.files"
	}, {
		"trigger": "req.param\t express 3.x",
		"contents": "req.param(${1:name})"
	}, {
		"trigger": "req.route\t express 3.x",
		"contents": "req.route"
	}, {
		"trigger": "req.cookies\t express 3.x",
		"contents": "req.cookies"
	}, {
		"trigger": "req.signedCookies\t express 3.x",
		"contents": "req.signedCookies"
	}, {
		"trigger": "req.get\t express 3.x",
		"contents": "req.get(${1:field})"
	}, {
		"trigger": "req.accepts\t express 3.x",
		"contents": "req.accepts(${1:types})"
	}, {
		"trigger": "req.accepted\t express 3.x",
		"contents": "req.accepted"
	}, {
		"trigger": "req.is\t express 3.x",
		"contents": "req.is(${1:type})"
	}, {
		"trigger": "req.ip\t express 3.x",
		"contents": "req.ip"
	}, {
		"trigger": "req.ips\t express 3.x",
		"contents": "req.ips"
	}, {
		"trigger": "req.path\t express 3.x",
		"contents": "req.path"
	}, {
		"trigger": "req.host\t express 3.x",
		"contents": "req.host"
	}, {
		"trigger": "req.fresh\t express 3.x",
		"contents": "req.fresh"
	}, {
		"trigger": "req.stale\t express 3.x",
		"contents": "req.stale"
	}, {
		"trigger": "req.xhr\t express 3.x",
		"contents": "req.xhr"
	}, {
		"trigger": "req.protocol\t express 3.x",
		"contents": "req.protocol"
	}, {
		"trigger": "req.secure\t express 3.x",
		"contents": "req.secure"
	}, {
		"trigger": "req.subdomains\t express 3.x",
		"contents": "req.subdomains"
	}, {
		"trigger": "req.originalUrl\t express 3.x",
		"contents": "req.originalUrl"
	}, {
		"trigger": "req.acceptedLanguages\t express 3.x",
		"contents": "req.acceptedLanguages"
	}, {
		"trigger": "req.acceptedCharsets\t express 3.x",
		"contents": "req.acceptedCharsets"
	}, {
		"trigger": "req.acceptsCharset\t express 3.x",
		"contents": "req.acceptsCharset(${1:charset})"
	}, {
		"trigger": "req.acceptsLanguage\t express 3.x",
		"contents": "req.acceptsLanguage(${1:lang})"
	}, {
		"trigger": "res.status\t express 3.x",
		"contents": "res.status(${1:code})"
	}, {
		"trigger": "res.set\t express 3.x",
		"contents": "res.set(${1:field},${2: [value]})"
	}, {
		"trigger": "res.get\t express 3.x",
		"contents": "res.get(${1:field})"
	}, {
		"trigger": "res.cookie\t express 3.x",
		"contents": "res.cookie(${1:name},${2: value},${3: [options]})"
	}, {
		"trigger": "res.clearCookie\t express 3.x",
		"contents": "res.clearCookie(${1:name},${2: [options]})"
	}, {
		"trigger": "res.redirect\t express 3.x",
		"contents": "res.redirect(${1:[status]},${2: url})"
	}, {
		"trigger": "res.location\t express 3.x",
		"contents": "res.location"
	}, {
		"trigger": "res.charset\t express 3.x",
		"contents": "res.charset"
	}, {
		"trigger": "res.send\t express 3.x",
		"contents": "res.send(${1:[body|status]},${2: [body]})"
	}, {
		"trigger": "res.json\t express 3.x",
		"contents": "res.json(${1:[status|body]},${2: [body]})"
	}, {
		"trigger": "res.jsonp\t express 3.x",
		"contents": "res.jsonp(${1:[status|body]},${2: [body]})"
	}, {
		"trigger": "res.type\t express 3.x",
		"contents": "res.type(${1:type})"
	}, {
		"trigger": "res.format\t express 3.x",
		"contents": "res.format(${1:object})"
	}, {
		"trigger": "res.attachment\t express 3.x",
		"contents": "res.attachment(${1:[filename]})"
	}, {
		"trigger": "res.sendfile\t express 3.x",
		"contents": "res.sendfile(${1:path},${2: [options]},${3: [fn]]})"
	}, {
		"trigger": "res.download\t express 3.x",
		"contents": "res.download(${1:path},${2: [filename]},${3: [fn]})"
	}, {
		"trigger": "res.links\t express 3.x",
		"contents": "res.links(${1:links})"
	}, {
		"trigger": "res.locals\t express 3.x",
		"contents": "res.locals"
	}, {
		"trigger": "res.render\t express 3.x",
		"contents": "res.render(${1:view},${2: [locals]},${3: callback})"
	}, {
		"trigger": "express.basicAuth\t express 3.x",
		"contents": "express.basicAuth(${1:})"
	}, {
		"trigger": "express.bodyParser\t express 3.x",
		"contents": "express.bodyParser(${1:})"
	}, {
		"trigger": "express.compress\t express 3.x",
		"contents": "express.compress(${1:})"
	}, {
		"trigger": "express.cookieParser\t express 3.x",
		"contents": "express.cookieParser(${1:})"
	}, {
		"trigger": "express.cookieSession\t express 3.x",
		"contents": "express.cookieSession(${1:})"
	}, {
		"trigger": "express.csrf\t express 3.x",
		"contents": "express.csrf(${1:})"
	}, {
		"trigger": "express.directory\t express 3.x",
		"contents": "express.directory(${1:})"
	}]
}