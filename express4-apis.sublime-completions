{

	"scope": "source.js",
	"completions": [{
		"trigger": "express.static\t express4.x",
		"contents": "express.static(${1:root},${2: [options]})"
	}, {
		"trigger": "Properties\t express4.x",
		"contents": "Properties"
	}, {
		"trigger": "app.locals\t express4.x",
		"contents": "app.locals"
	}, {
		"trigger": "app.mountpath\t express4.x",
		"contents": "app.mountpath"
	}, {
		"trigger": "Events\t express4.x",
		"contents": "Events"
	}, {
		"trigger": "express.callback\t express4.x",
		"contents": "express.callback(${1:parent})"
	}, {
		"trigger": "app.all\t express4.x",
		"contents": "app.all(${1:path},${2: callback [},${3: callback ...]})"
	}, {
		"trigger": "app.delete\t express4.x",
		"contents": "app.delete(${1:path},${2: callback [},${3: callback ...]})"
	}, {
		"trigger": "app.disable\t express4.x",
		"contents": "app.disable(${1:name})"
	}, {
		"trigger": "app.disabled\t express4.x",
		"contents": "app.disabled(${1:name})"
	}, {
		"trigger": "app.enable\t express4.x",
		"contents": "app.enable(${1:name})"
	}, {
		"trigger": "app.enabled\t express4.x",
		"contents": "app.enabled(${1:name})"
	}, {
		"trigger": "app.engine\t express4.x",
		"contents": "app.engine(${1:ext},${2: callback})"
	}, {
		"trigger": "app.get\t express4.x",
		"contents": "app.get(${1:name})"
	}, {
		"trigger": "app.get\t express4.x",
		"contents": "app.get(${1:path},${2: callback [},${3: callback ...]})"
	}, {
		"trigger": "app.listen\t express4.x",
		"contents": "app.listen(${1:port},${2: [hostname]},${3: [backlog]},${4: [callback]})"
	}, {
		"trigger": "app.METHOD\t express4.x",
		"contents": "app.METHOD(${1:path},${2: callback [},${3: callback ...]})"
	}, {
		"trigger": "app.param\t express4.x",
		"contents": "app.param(${1:[name]},${2: callback})"
	}, {
		"trigger": "app.path\t express4.x",
		"contents": "app.path(${1:})"
	}, {
		"trigger": "app.post\t express4.x",
		"contents": "app.post(${1:path},${2: callback [},${3: callback ...]})"
	}, {
		"trigger": "app.put\t express4.x",
		"contents": "app.put(${1:path},${2: callback [},${3: callback ...]})"
	}, {
		"trigger": "app.render\t express4.x",
		"contents": "app.render(${1:view},${2: [locals]},${3: callback})"
	}, {
		"trigger": "app.route\t express4.x",
		"contents": "app.route(${1:path})"
	}, {
		"trigger": "app.set\t express4.x",
		"contents": "app.set(${1:name},${2: value})"
	}, {
		"trigger": "app.use\t express4.x",
		"contents": "app.use(${1:[path},${2:] function [},${3: function...]})"
	}, {
		"trigger": "Properties\t express4.x",
		"contents": "Properties"
	}, {
		"trigger": "req.app\t express4.x",
		"contents": "req.app"
	}, {
		"trigger": "req.baseUrl\t express4.x",
		"contents": "req.baseUrl"
	}, {
		"trigger": "req.body\t express4.x",
		"contents": "req.body"
	}, {
		"trigger": "req.cookies\t express4.x",
		"contents": "req.cookies"
	}, {
		"trigger": "req.fresh\t express4.x",
		"contents": "req.fresh"
	}, {
		"trigger": "req.hostname\t express4.x",
		"contents": "req.hostname"
	}, {
		"trigger": "req.ip\t express4.x",
		"contents": "req.ip"
	}, {
		"trigger": "req.ips\t express4.x",
		"contents": "req.ips"
	}, {
		"trigger": "req.originalUrl\t express4.x",
		"contents": "req.originalUrl"
	}, {
		"trigger": "req.params\t express4.x",
		"contents": "req.params"
	}, {
		"trigger": "req.path\t express4.x",
		"contents": "req.path"
	}, {
		"trigger": "req.protocol\t express4.x",
		"contents": "req.protocol"
	}, {
		"trigger": "req.query\t express4.x",
		"contents": "req.query"
	}, {
		"trigger": "req.route\t express4.x",
		"contents": "req.route"
	}, {
		"trigger": "req.secure\t express4.x",
		"contents": "req.secure"
	}, {
		"trigger": "req.signedCookies\t express4.x",
		"contents": "req.signedCookies"
	}, {
		"trigger": "req.stale\t express4.x",
		"contents": "req.stale"
	}, {
		"trigger": "req.subdomains\t express4.x",
		"contents": "req.subdomains"
	}, {
		"trigger": "req.xhr\t express4.x",
		"contents": "req.xhr"
	}, {
		"trigger": "req.accepts\t express4.x",
		"contents": "req.accepts(${1:types})"
	}, {
		"trigger": "req.acceptsCharsets\t express4.x",
		"contents": "req.acceptsCharsets(${1:charset [},${2: ...]})"
	}, {
		"trigger": "req.acceptsEncodings\t express4.x",
		"contents": "req.acceptsEncodings(${1:encoding [},${2: ...]})"
	}, {
		"trigger": "req.acceptsLanguages\t express4.x",
		"contents": "req.acceptsLanguages(${1:lang [},${2: ...]})"
	}, {
		"trigger": "req.get\t express4.x",
		"contents": "req.get(${1:field})"
	}, {
		"trigger": "req.is\t express4.x",
		"contents": "req.is(${1:type})"
	}, {
		"trigger": "req.param\t express4.x",
		"contents": "req.param(${1:name [},${2: defaultValue]})"
	}, {
		"trigger": "Properties\t express4.x",
		"contents": "Properties"
	}, {
		"trigger": "res.app\t express4.x",
		"contents": "res.app"
	}, {
		"trigger": "res.headersSent\t express4.x",
		"contents": "res.headersSent"
	}, {
		"trigger": "res.locals\t express4.x",
		"contents": "res.locals"
	}, {
		"trigger": "res.append\t express4.x",
		"contents": "res.append(${1:field [},${2: value]})"
	}, {
		"trigger": "res.attachment\t express4.x",
		"contents": "res.attachment(${1:[filename]})"
	}, {
		"trigger": "res.cookie\t express4.x",
		"contents": "res.cookie(${1:name},${2: value [},${3: options]})"
	}, {
		"trigger": "res.clearCookie\t express4.x",
		"contents": "res.clearCookie(${1:name [},${2: options]})"
	}, {
		"trigger": "res.download\t express4.x",
		"contents": "res.download(${1:path [},${2: filename] [},${3: fn]})"
	}, {
		"trigger": "res.end\t express4.x",
		"contents": "res.end(${1:[data] [},${2: encoding]})"
	}, {
		"trigger": "res.format\t express4.x",
		"contents": "res.format(${1:object})"
	}, {
		"trigger": "res.get\t express4.x",
		"contents": "res.get(${1:field})"
	}, {
		"trigger": "res.json\t express4.x",
		"contents": "res.json(${1:[body]})"
	}, {
		"trigger": "res.jsonp\t express4.x",
		"contents": "res.jsonp(${1:[body]})"
	}, {
		"trigger": "res.links\t express4.x",
		"contents": "res.links(${1:links})"
	}, {
		"trigger": "res.location\t express4.x",
		"contents": "res.location(${1:path})"
	}, {
		"trigger": "res.redirect\t express4.x",
		"contents": "res.redirect(${1:[status},${2:] path})"
	}, {
		"trigger": "res.render\t express4.x",
		"contents": "res.render(${1:view [},${2: locals] [},${3: callback]})"
	}, {
		"trigger": "res.send\t express4.x",
		"contents": "res.send(${1:[body]})"
	}, {
		"trigger": "res.sendFile\t express4.x",
		"contents": "res.sendFile(${1:path [},${2: options] [},${3: fn]})"
	}, {
		"trigger": "res.sendStatus\t express4.x",
		"contents": "res.sendStatus(${1:statusCode})"
	}, {
		"trigger": "res.set\t express4.x",
		"contents": "res.set(${1:field [},${2: value]})"
	}, {
		"trigger": "res.status\t express4.x",
		"contents": "res.status(${1:code})"
	}, {
		"trigger": "res.type\t express4.x",
		"contents": "res.type(${1:type})"
	}, {
		"trigger": "res.vary\t express4.x",
		"contents": "res.vary(${1:field})"
	}, {
		"trigger": "express.Router\t express4.x",
		"contents": "express.Router(${1:[options]})"
	}, {
		"trigger": "router.all\t express4.x",
		"contents": "router.all(${1:path},${2: [callback},${3: ...] callback})"
	}, {
		"trigger": "router.METHOD\t express4.x",
		"contents": "router.METHOD(${1:path},${2: [callback},${3: ...] callback})"
	}, {
		"trigger": "router.param\t express4.x",
		"contents": "router.param(${1:[name},${2:] callback})"
	}, {
		"trigger": "router.route\t express4.x",
		"contents": "router.route(${1:path})"
	}, {
		"trigger": "router.use\t express4.x",
		"contents": "router.use(${1:[path]},${2: [function},${3: ...] function})"
	}]

}